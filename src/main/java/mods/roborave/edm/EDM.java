package mods.roborave.edm;
import java.net.URL;
import java.util.Arrays;

import mods.mud.ModUpdateDetector;
import mods.roborave.edm.helper.LocalizationHandler;
import mods.roborave.edm.helper.LogHandler;
import mods.roborave.edm.init.Blocks;
import mods.roborave.edm.init.Items;
import mods.roborave.edm.lib.Strings;
import cpw.mods.fml.common.DummyModContainer;
import cpw.mods.fml.common.FMLCommonHandler;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;

@Mod(modid = Strings.MODID, name = Strings.name, version = Strings.version,canBeDeactivated=true)

public class EDM extends DummyModContainer{
	
	public static LogHandler log;
	
	@Instance(Strings.MODID)
	public static EDM Instance;
	
	public Strings lib;
	/**
	 * Loads before
	 * @param PreEvent
	 */
	@EventHandler
	public static void PreLoad(FMLPreInitializationEvent PreEvent)
	{
		ModMetadata meta = PreEvent.getModMetadata();
		meta.autogenerated = false;
		meta.credits = "(C) Roborave, 2013-2014";
		meta.authorList = Arrays.asList("Roborave");
		meta.name = Strings.name;
		meta.version = Strings.version;
		meta.description = "";
		
		LocalizationHandler.init();
		Blocks.init();
		Items.init();
		Blocks.TestBlocks();
            try {
                ModUpdateDetector.registerMod(
                        FMLCommonHandler.instance().findContainerFor("extra_diamonds_mod"),
                        new URL("https://raw.github.com/RoboRave/EDM 1.7/master/battlegear_update.xml"),
                        new URL("https://raw.github.com/Mine-and-blade-admin/Battlegear2/master/changelog.md")
                );
            } catch (Throwable e) {
                e.printStackTrace();
            }
    }
	
	/**
	 * Loads during
	 * @param event
	 */
	@EventHandler
	public static void load(FMLInitializationEvent event)
	{
		
	}
	
	/**
	 * Loads after
	 * @param PostEvent
	 */
	@EventHandler
	public static void PostLoad(FMLPostInitializationEvent PostEvent)
	{
		
	}
	
}
